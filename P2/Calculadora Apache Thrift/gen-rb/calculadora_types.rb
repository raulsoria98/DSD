#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class Vect2D
  include ::Thrift::Struct, ::Thrift::Struct_Union
  X = 1
  Y = 2

  FIELDS = {
    X => {:type => ::Thrift::Types::DOUBLE, :name => 'x'},
    Y => {:type => ::Thrift::Types::DOUBLE, :name => 'y'}
  }

  def to_s
    return "<#{x}, #{y}>"
  end

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field x is unset!') unless @x
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field y is unset!') unless @y
  end

  ::Thrift::Struct.generate_accessors self
end

class Vect3D
  include ::Thrift::Struct, ::Thrift::Struct_Union
  X = 1
  Y = 2
  Z = 3

  FIELDS = {
    X => {:type => ::Thrift::Types::DOUBLE, :name => 'x'},
    Y => {:type => ::Thrift::Types::DOUBLE, :name => 'y'},
    Z => {:type => ::Thrift::Types::DOUBLE, :name => 'z'}
  }

  def to_s
    return "<#{x}, #{y}, #{z}>"
  end

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field x is unset!') unless @x
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field y is unset!') unless @y
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field z is unset!') unless @z
  end

  ::Thrift::Struct.generate_accessors self
end

